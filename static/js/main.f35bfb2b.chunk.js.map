{"version":3,"sources":["Todolist.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Todolist","props","title","type","checked","task","isDone","App","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uJAaO,SAASA,EAASC,GACrB,OACI,gCACI,6BAAKA,EAAMC,QACX,gCACI,0BACA,0CAEJ,+BACI,+BAAI,uBAAOC,KAAK,WAAWC,QAASH,EAAMI,KAAK,GAAGC,SAAS,+BAAOL,EAAMI,KAAK,GAAGH,WAChF,+BAAI,uBAAOC,KAAK,WAAWC,QAASH,EAAMI,KAAK,GAAGC,SAAS,+BAAOL,EAAMI,KAAK,GAAGH,WAChF,+BAAI,uBAAOC,KAAK,WAAWC,QAASH,EAAMI,KAAK,GAAGC,SAAS,+BAAOL,EAAMI,KAAK,GAAGH,cAEpF,gCACI,yCACA,4CACA,qDCXDK,MAdf,WAMI,OACI,qBAAKC,UAAU,MAAf,SACI,cAACR,EAAD,CAAUE,MAAO,gBAAiBG,KAP/B,CAAC,CAACI,GAAI,EAAGP,MAAO,OAAQI,QAAQ,GACvC,CAACG,GAAI,EAAGP,MAAO,OAAQI,QAAQ,GAC/B,CAACG,GAAI,EAAGP,MAAO,OAAQI,QAAQ,SCOxBI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f35bfb2b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport type TaskType = {\r\n    id: number\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype TodolistType = {\r\n    title: string\r\n    task: Array<TaskType>\r\n}\r\n\r\nexport function Todolist(props: TodolistType) {\r\n    return (\r\n        <div>\r\n            <h3>{props.title}</h3>\r\n            <div>\r\n                <input/>\r\n                <button>+</button>\r\n            </div>\r\n            <ul>\r\n                <li><input type=\"checkbox\" checked={props.task[0].isDone}/><span>{props.task[0].title}</span></li>\r\n                <li><input type=\"checkbox\" checked={props.task[1].isDone}/><span>{props.task[1].title}</span></li>\r\n                <li><input type=\"checkbox\" checked={props.task[2].isDone}/><span>{props.task[2].title}</span></li>\r\n            </ul>\r\n            <div>\r\n                <button>all</button>\r\n                <button>active</button>\r\n                <button>complited</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport {Todolist} from \"./Todolist\";\n\nfunction App() {\n    let task = [{id: 1, title: \"html\", isDone: true},\n        {id: 2, title: \"html\", isDone: true},\n        {id: 3, title: \"html\", isDone: true}]\n\n\n    return (\n        <div className=\"App\">\n            <Todolist title={\"what to learn\"} task={task}/>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}